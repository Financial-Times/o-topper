@mixin oTopperTheme($theme) {
	@if index($_o-topper-themes, $theme) == false {
		@error 'No such o-topper theme' $theme;
	} @else {
		@extend %_o-topper--#{$theme};
	}
}

@mixin oTopperThemeElements {
	.o-topper--has-headshot{ @extend %_o-topper--has-headshot; }
	.o-topper__opinion-genre{ @extend %_o-topper__opinion-genre; }
	.o-topper__headshot{ @extend %_o-topper__headshot; }
	.o-topper__headshot-image { @extend %_o-topper__headshot-image; }
}

@mixin oTopperThemes() {
	@each $theme in $_o-topper-themes {
		.o-topper--#{$theme} {
			@include oTopperTheme($theme);
		}
	}

	@include oTopperThemeElements;
}

// uses topper background colour to set background and pick contrasting text color
@mixin oTopperColor($color-name) {
	$background: oColorsGetPaletteColor($color-name);
	$foreground: oColorsGetTextColor($background, $opacity: 100);
	$is-light: $foreground == 'white';
	$hover-color: lighten($foreground, 40%);

	@if $is-light {
		$hover-color: darken($foreground, 20%);
	}

	// include oTopperColor on a parent then extend this placeholder on a
	// descendent to lend that descendent the color you specified in the mixin
	%_o-topper--has-color {
		@if $color-name == 'wheat' {
			background-color: oColorsMix($color: 'wheat', $percentage: 40);
		} @else {
			background-color: $background;
		}
	}

	// generate a placeholder and immediately extend it, to attach its styles and
	// allow descendents to vary behaviour based on color theme
	@extend %_o-topper--color-#{$color-name};

	&%_o-topper--color-#{$color-name} {
		@if not $is-light {
			%_o-topper__standfirst {
				a {
					color: $foreground;
					border-bottom-color: $foreground;

					&:hover {
						color: $hover-color;
						border-bottom-color: $hover-color;
					}
				}
			}
		}

		%_o-topper__headline {
			&::after {
				border-bottom: 6px solid $foreground;

				@include oGridRespondTo($from: L) {
					border-bottom-width: 8px;
				}
			}
		}


		%_o-topper__tags,
		%_o-topper__columnist-name,
		%_o-topper__headline,
		%_o-topper__standfirst,
		%_o-topper__summary {
			color: $foreground;
		}

		%_o-topper__topic,
		%_o-topper__brand {
			color: $foreground;

			&:hover {
				color: oColorsMix($foreground, $color-name, 73);
			}
		}

		@if $color-name == 'paper' or $color-name == 'wheat' {
			%_o-topper__topic,
			%_o-topper__columnist-name {
				@include oColorsFor('tag-link', text);

				&:hover {
					@include oColorsFor('tag-link-hover', text);
				}
			}
		}

		@if $color-name == 'sky' {
			%_o-topper__tags,
			%_o-topper__topic,
			%_o-topper__columnist-name {
				color: oColorsGetPaletteColor('oxford');

				&:hover {
					color: oColorsGetPaletteColor('black-80');
				}
			}
		}
	}
}

@mixin oTopperColors() {
	@each $color in $_o-topper-colors {
		.o-topper--color-#{$color} {
			@include oTopperColor($color);
		}
	}
}

@mixin oTopperElements {
	.o-topper { @include oTopper; }
	.o-topper--centered { @include oTopperCentered; }
	.o-topper__content{ @include oTopperContent; }
	.o-topper__visual{ @include oTopperVisual; }
	.o-topper__background{ @include oTopperBackground; }
	.o-topper--basic { @include oTopperBasic; }
	.o-topper__headline { @include oTopperHeadline; }
	.o-topper__headline--large { @include oTopperHeadlineLarge; }
	.o-topper__summary { @include oTopperSummary; }
	.o-topper__standfirst { @include oTopperStandfirst; }
	.o-topper__summary--body { @include oTopperSummaryBody; }
	.o-topper__tags { @include oTopperTags; }
	.o-topper__columnist { @include oTopperColumnist; }
	.o-topper__columnist-name { @include oTopperColumnistName; }
	.o-topper__brand { @include oTopperBrand; }
	.o-topper__topic { @include oTopperTopic; }
	.o-topper__read-next { @include oTopperReadNext; }
	.o-topper__image { @include oTopperImage; }
	.o-topper__image-credit { @include oTopperImageCredit; }
	.o-topper__picture { @include oTopperPicture; }
	.o-topper__anchor-link { @include oTopperAnchorLink; }
}

@mixin _oTopperAlignText($position) {
	$mleft: ('left': 0, 'center': auto, 'right': auto);
	$mright: ('left': auto, 'center': auto, 'right': 0);
	$value: ('left': flex-start, 'center': center, 'right': flex-end);

	%_o-topper__headline--large {
		&:after {
			margin-left: map-get($mleft, #{$position});
			margin-right: map-get($mright, #{$position});
		}
	}

	%_o-topper__content {
		text-align: $position;
		align-self: map-get($value, #{$position});
	}

	%_o-topper__tags {
		justify-content: map-get($value, #{$position});
	}
}
