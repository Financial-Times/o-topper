// scss-lint:disable SelectorFormat

@function -o-topper-join-string($list, $separator: '') {
	$result: null;
	$first: true;

	@each $item in $list {
	  @if ($first) {
		 $result: $item;
		 $first: false;
	  } @else {
		 $result: $result + $separator + $item;
	  }
	}

	@return $result;
 }

@mixin _oTopperReceive($paths...) {
	@each $keys in $paths {
		@extend %-o-topper-receive-#{-o-topper-join-string($keys, '-')};
	}
}

@mixin _oTopperProvide($paths...) {
	@each $keys in $paths {
		%-o-topper-receive-#{-o-topper-join-string($keys, '-')} {
			@content;
		}
	}
}

// uses topper background colour to set background and pick contrasting text color
@mixin oTopperColor($bg-color) {
	@include _oTopperProvide(color) {
		$text-color: black;
		$hover-color: lighten($text-color, 40%);
		$contrast: lightness(oColorsGetPaletteColor($bg-color));
		@if $contrast <= 50% {
			$text-color: white;
			$hover-color: darken($text-color, 20%);
			.o-topper__standfirst a {
				color: $text-color;
				border-bottom-color: $text-color;
				&:hover {
					color: $hover-color;
					border-bottom-color: $hover-color;
				}
			}
		}

		.o-topper__headline::after {
			border-bottom: 6px solid $text-color;
			@include oGridRespondTo($from: L) {
				border-bottom-width: 8px;
			}
		}

		@if $bg-color == 'wheat' {
			background-color: oColorsMix($color: 'wheat', $percentage: 40);
		} @else {
			background-color: oColorsGetPaletteColor($bg-color);
		}
		.o-topper__tags,
		.o-topper__columnist-name,
		.o-topper__headline,
		.o-topper__standfirst,
		.o-topper__summary {
			color: $text-color;
		}

		.o-topper__tags .n-content-tag {
			color: $text-color;
			&:hover {
				color: oColorsMix($text-color, $bg-color, 73);
			}
		}

		@if $bg-color == 'paper' or $bg-color == 'wheat' {
			.o-topper__tags .n-content-tag:not(.n-content-tag--brand),
			.o-topper__columnist-name {
				@include oColorsFor(tag-link, text);
				&:hover {
					@include oColorsFor(tag-link-hover, text);
				}
			}
		}
	}
}

@mixin _oTopperAlignText($position) {
	$mleft: ('left': 0, 'center': auto, 'right': auto);
	$mright: ('left': auto, 'center': auto, 'right': 0);
	$value: ('left': flex-start, 'center': center, 'right': flex-end);

	.o-topper__headline--large:after {
		margin-left: map-get($mleft, #{$position});
		margin-right: map-get($mright, #{$position});
	}
	.o-topper__content {
		text-align: $position;
		align-self: map-get($value, #{$position});
	}

	.o-topper__tags {
		justify-content: map-get($value, #{$position});
	}
}

@mixin stackTags {
	.o-topper__tags {
		flex-direction: column;
		justify-content: center;
		padding-bottom: 15px;
		.n-content-tag {
			padding-bottom: 5px;
		}
	}
}
